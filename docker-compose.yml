version: "2"
services:
  btc:
    build:
      context: docker/btcd/
    volumes:
      - shared:/rpc
      - bitcoin:/data
    environment:
      - RPCUSER
      - RPCPASS
      - NETWORK

  db: 
    container_name: postgres
    build: 
      context: docker/postgres
    volumes: 
      - postgres:/var/lib/postgresql
    environment: 
      - DATABASE_USER
    ports: 
      # expose default Postgres port as 5434 on host
      - 5434:5432
  btcd:
    extends: btc
    container_name: btcd
    environment:
      - DEBUG
      - MINING_ADDRESS
      - NETWORK
    entrypoint: ["./start-btcd.sh"]

  btcctl:
    extends: btc
    container_name: btcctl
    links:
      - "btcd:rpcserver"
    entrypoint: ["./start-btcctl.sh"]

  lnd:
    build:
      context: docker/lnd
      args: 
        # we want UID and GID to be the same as the current user
        # this is so permissions work out nicely when reading macaroon 
        # files. By default Docker containers run as root, which 
        # prevents us from reading the files we need 
        UID: $UID
        GID: $GID
        LND_VERSION: "0.7.1-beta"
    environment:
      - RPCUSER
      - RPCPASS
      - NETWORK
      - CHAIN
      - DEBUG
    volumes:
      - shared:/rpc
    entrypoint: ["./start-lnd.sh"]

  bob:
    extends: lnd
    container_name: bob
    volumes:
      # Map ./.bob to Bobs LND data dir
      - ./docker/.bob:/home/lnd/.lnd
    links:
      - "btcd:blockchain"

  alice:
    extends: lnd
    container_name: alice
    # expose Alice's LND RPC port
    ports:
      - "10009:10009"
    volumes:
      - ./docker/.alice:/home/lnd/.lnd
    links:
      - "btcd:blockchain"

volumes:
  # shared volume is need to store the btcd rpc certificates and use it within
  # btcctl and lnd containers.
  shared:

  # bitcoin volume is needed for maintaining blockchain persistence
  # during btcd container recreation.
  bitcoin:

  # postgres volume is needed for persisting DB state
  # across container runs
  postgres:
